name: Gradle CI (Search)

on:
  pull_request:
    branches: [ develop, main ]
  push:
    branches: [ develop, main, feature/** ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: Backend/Search

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build & run unit + integration tests
        run: ./gradlew clean build --no-daemon
        env:
          TESTCONTAINERS_RYUK_DISABLED: true

      - name: Upload test reports (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/test-results/**
            **/build/reports/tests/**

  kaniko:
    if: github.event_name == 'push'
    needs: [ build-and-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Compute vars
        id: v
        run: |
          echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          cd Backend/Search
          VERSION=$(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{print $2}')
          echo "pkgver=${VERSION}" >> $GITHUB_OUTPUT

      - name: Set image name (GHCR)
        id: img
        run: |
          echo "name=ghcr.io/${{ github.repository_owner }}/search-service" >> $GITHUB_OUTPUT

      - name: Compute tags
        id: tags
        run: |
          BR="${{ steps.v.outputs.branch }}"
          PV="${{ steps.v.outputs.pkgver }}"
          SH="${{ steps.v.outputs.sha }}"
          if [ "$BR" = "master" ] || [ "$BR" = "main" ]; then
            TAGS="latest,${PV},${PV}-${SH},sha-${SH}"
          elif [ "$BR" = "develop" ]; then
            TAGS="develop,${PV}-dev-${SH},sha-${SH}"
          else
            SAFE=$(echo "$BR" | tr '/' '-' )
            TAGS="${SAFE},${SAFE}-${SH},sha-${SH}"
          fi
          echo "list=${TAGS}" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push with Kaniko (GHCR)
        run: |
          DESTINATIONS=""
          IFS=',' read -ra TAGS <<< "${{ steps.tags.outputs.list }}"
          for tag in "${TAGS[@]}"; do
            DESTINATIONS="$DESTINATIONS --destination=${{ steps.img.outputs.name }}:$tag"
          done
          
          docker run \
            -v ${{ github.workspace }}/Backend/Search:/workspace \
            -v $HOME/.docker/config.json:/kaniko/.docker/config.json:ro \
            gcr.io/kaniko-project/executor:latest \
            --context=/workspace \
            --dockerfile=Dockerfile \
            $DESTINATIONS \
            --cache=true \
            --cache-repo=${{ steps.img.outputs.name }}-cache \
            --verbosity=debug